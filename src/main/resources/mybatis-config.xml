<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">

<!-- Mybatis 配置文件都被这个标签包着 -->
<configuration>

    <!-- 指定 MyBatis 数据库配置文件， properties标签的作用是引入外部properties文件配置内容 -->
    <properties resource="db.properties"/>

    <!-- 指定日志文件系统为Log4J2 -->
    <settings>
        <setting name="logImpl" value="LOG4J2"/>
    </settings>

    <!-- typeAliases标签就是别名处理器， 可以为Java类取别名， 并且注意别名不区分大小写 -->
    <typeAliases>
        <!-- type：指定要起别名的类全类名， 默认别名是小写 alias：指定的别名 -->
        <!--        <typeAlias type="cn.cnm.pojo.Flower" alias="flower"></typeAlias>-->
        <!-- package：为某个包下的所有类取别名 -->
        <!-- name：指定包名， 会将包以及包下的所有类取别名 -->
        <!-- 如果子包下有重名的类， 则需要单独给其中一个类取另一个名字以防冲突， 可以使用@Alias()注解指定 -->
        <package name="cn.cnm.pojo"/>
    </typeAliases>

    <!-- 环境配置， 可以配置多个环境 default 属性表示当项目使用的环境 -->
    <environments default="">
        <environment id="">
            <!-- 事务设置， 这里设置为使用原生JDBC事务 -->
            <transactionManager type="JDBC"/>

            <!-- dataSource指数据源配置，POOLED是JDBC连接对象的数据源连接池的实现。 -->
            <dataSource type="UNPOOLED">
                <property name="driver" value="${jdbc.driver}"/>
                <property name="url" value="${jdbc.url}"/>
                <property name="username" value="${jdbc.username}"/>
                <property name="password" value="${jdbc.password}"/>
            </dataSource>
        </environment>
    </environments>

    <!-- 告诉了MyBatis去哪里找持久化类的映射类 mapper 文件 -->
    <!-- resource 指定单个类路径下的SQL映射文件 -->
    <!-- <package> 引入指定包路径下以及子包下的所有SQL映射文件-->
    <!-- url 引入网络或者磁盘中的SQL映射文件 -->
    <!-- class 引入（注册）接口， 要求SQL映射文件名和接口名一致， 并且在同一包下 -->
    <mappers>
        <!--        <mapper resource="cn/cnm/mapper/FlowerMapper.xml" />-->
        <!--        <mapper class="cn.cnm.mapper.FlowerAnnotationMapper" />-->
        <package name="cn.cnm.mapper"/>
    </mappers>

    <!-- 多数据库支持， 设置后MyBatis可以现有的SQL转换成对应数据库的SQL并执行 -->
    <!--    <databaseIdProvider type="DB_VENDOR"></databaseIdProvider>-->
    <!--    <databaseIdProvider type="DB_VENDOR">-->
    <!--        <property name="SQL Server" value="sqlserver"/>-->
    <!--        <property name="DB2" value="db2"/>-->
    <!--        <property name="Oracle" value="oracle"/>-->
    <!--    </databaseIdProvider>-->


</configuration>
